<?php

/**
 * Implements hook_schema().
 */
function workbench_moderation_exportables_schema() {

  $schema = array();
  // Define the states schema
  $schema["workbench_moderation_exportables_states"] = workbench_moderation_exportables_starter_schema('state', 'states');

  // Define the events schema
  $schema["workbench_moderation_exportables_events"] = workbench_moderation_exportables_starter_schema('event', 'events');

  // Add fieds to the events schema
  $additional_event_fields = array(
    'target_state' => array(
      'type' => 'varchar',
      'length' => '255',
      'description' => 'target state',
    ),
    'origin_states' => array(
      'type' => 'text',
      'size' => 'big',
      'description' => 'Origin states',
      'serialize' => TRUE,
      'object default' => array(),
    ),
  );

  $schema["workbench_moderation_exportables_events"]['fields'] = array_merge($schema["workbench_moderation_exportables_events"]['fields'], $additional_event_fields);

  // Define the workflows schema
  $schema["workbench_moderation_exportables_workflows"] = workbench_moderation_exportables_starter_schema('workflow', 'workflows');

  $additional_workflow_fields = array(

    'category' => array(
      'type' => 'varchar',
      'length' => '64',
      'description' => 'The category this workbench workflow appears in.',
    ),
    'states' => array(
      'type' => 'text',
      'size' => 'big',
      'serialize' => TRUE,
      'object default' => array(),
      'description' => 'An array of states allowed in the workflow',
    ),
    'events' => array(
      'type' => 'text',
      'size' => 'big',
      'serialize' => TRUE,
      'object default' => array(),
      'description' => 'An array of events allowed in the workflow',
    ),
  );

  $schema["workbench_moderation_exportables_workflows"]['fields'] = array_merge($schema["workbench_moderation_exportables_workflows"]['fields'], $additional_workflow_fields);
  $schema["workbench_moderation_exportables_workflows"]['load callback'] = 'workbench_workflows_load';
  $schema["workbench_moderation_exportables_workflows"]['load all callback'] = 'workbench_workflows_load_all';

  return $schema;
}

/**
 * Helper function for defining schema.
 */
function workbench_moderation_exportables_starter_schema($type, $plural) {

  $schema = array(
    "description" => "Contains exportable customized $plural.",
    "export" => array(
      "identifier" => "$type",
      "bulk export" => TRUE,
      "primary key" => $type . "id",

      // @todo I"m not sure what this array should be.
      "api" => array(
        "owner" => "workbench_$plural",
        "api" => "workbench_$plural",
        "minimum_version" => 1,
        "current_version" => 1,
      ),
    ),
    "fields" => array(
      $type . "id" => array(
        "type" => "serial",
        "description" => "A database primary key to ensure uniqueness",
        "not null" => TRUE,
        "no export" => TRUE,
      ),
      "name" => array(
        "type" => "varchar",
        "length" => "255",
        "description" => "Unique ID for this $type. Used to identify it programmatically.",
      ),
      "editor_title" => array(
        "type" => "varchar",
        "length" => "255",
        "description" => "Administrative title for this $type.",
      ),
      "admin_title" => array(
        "type" => "varchar",
        "length" => "255",
        "description" => "Administrative title for this $type.",
      ),
      "admin_description" => array(
        "type" => "text",
        "size" => "big",
        "description" => "Administrative description for this $type.",
        "object default" => "",
      ),
      "requiredcontexts" => array(
        "type" => "text",
        "size" => "big",
        "description" => "Any required contexts for this $type.",
        "serialize" => TRUE,
        "object default" => array(),
      ),
      "contexts" => array(
        "type" => "text",
        "size" => "big",
        "description" => "Any embedded contexts for this $type.",
        "serialize" => TRUE,
        "object default" => array(),
      ),
      "relationships" => array(
        "type" => "text",
        "size" => "big",
        "description" => "Any relationships for this $type.",
        "serialize" => TRUE,
        "object default" => array(),
      ),
      "access" => array(
        "type" => "text",
        "size" => "big",
        "description" => "The actual group of access plugins for this $type.",
        "serialize" => TRUE,
        "object default" => array(),
      ),
      'weight' => array(
        'type' => 'int',
        'no export' => TRUE,
        'description' => 'Weight',
      ),
    ),
    "primary key" => array($type. "id"),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );

  return $schema;
}
