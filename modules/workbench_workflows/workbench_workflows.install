<?php

/**
 * Implementation of hook_schema().
 */
function workbench_workflows_schema() {
  // This should always point to our 'current' schema. This makes it relatively easy
  // to keep a record of schema as we make changes to it.
  return workbench_workflows_schema_1();
}

/**
 * Schema version 1 for Panels in D6.
 */
function workbench_workflows_schema_1() {
  $schema = array();

  $schema['workbench_workflows'] = array(
    'export' => array(
      'identifier' => 'workflow',
      'load callback' => 'workbench_workflows_load',
      'load all callback' => 'workbench_workflows_load_all',
      'save callback' => 'workbench_workflows_save',
      'delete callback' => 'workbench_workflows_delete',
      'export callback' => 'workbench_workflows_export',
      'api' => array(
        'owner' => 'workbench_workflows',
        'api' => 'panels_default',
        'minimum_version' => 1,
        'current_version' => 1,
      ),
    ),
    'fields' => array(
      'pid' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'no export' => TRUE,
        'description' => 'The primary key for uniqueness.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => '255',
        'description' => 'The unique name of the workbench workflow.',
      ),
      'category' => array(
        'type' => 'varchar',
        'length' => '64',
        'description' => 'The category this workbench workflow appears in on the add content pane.',
      ),
      'did' => array(
        'type' => 'int',
        'no export' => TRUE,
        'description' => 'The display ID of the panel.',
      ),
      'admin_title' => array(
        'type' => 'varchar',
        'length' => '128',
        'description' => 'The administrative title of the workbench workflow.',
      ),
      'admin_description' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'Administrative title of this workbench workflow.',
        'object default' => '',
      ),
      'states' => array(
        'type' => 'text',
        'size' => 'big',
        'serialize' => TRUE,
        'object default' => array(),
        'description' => 'An array of states allowed in the workflow',
      ),
      'events' => array(
        'type' => 'text',
        'size' => 'big',
        'serialize' => TRUE,
        'object default' => array(),
        'description' => 'An array of events allowed in the workflow',
      ),
      'requiredcontexts' => array(
        'type' => 'text',
        'size' => 'big',
        'serialize' => TRUE,
        'object default' => array(),
        'description' => 'An array of required contexts.',
      ),
      'contexts' => array(
        'type' => 'text',
        'size' => 'big',
        'serialize' => TRUE,
        'object default' => array(),
        'description' => 'An array of contexts embedded into the panel.',
      ),
      'relationships' => array(
        'type' => 'text',
        'size' => 'big',
        'serialize' => TRUE,
        'object default' => array(),
        'description' => 'An array of relationships embedded into the panel.',
      ),
      'access' => array(
        'type' => 'text',
        'size' => 'big',
        'description' => 'The actual group of access plugins for this ruleset.',
        'serialize' => TRUE,
        'object default' => array(),
      ),
      'weight' => array(
        'type' => 'int',
        'no export' => TRUE,
        'description' => 'Weight',
      ),
    ),
    'primary key' => array('pid'),
    'unique keys' => array(
      'name' => array('name'),
    ),
  );

  return $schema;
}
