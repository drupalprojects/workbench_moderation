<?php

/**
 * Implements hook_state_flow_plugins().
 */
function workbench_stateflow_state_flow_plugins() {
  $info = array();
  $path = drupal_get_path('module', 'workbench_stateflow') . '/plugins/state_flow';

  $info['workbench_stateflow'] = array(
    'handler' => array(
      'parent' => 'state_flow',
      'class' => 'workbenchStateflow',
      'file' => 'workbench_stateflow.inc',
      'path' => $path,
    ),
  );

  return $info;
}

/**
 * Implements hook_state_flow_machine_type_alter()
 */
function workbench_stateflow_state_flow_machine_type_alter(&$machine_type, $node) {
  $machine_type = 'workbench_stateflow';
}

/**
 * Guard callback for the workbenchStates publish and unpublish events.
 */
function workbench_stateflow_guard($event) {
  return workbench_stateflow_event_access($event->name, $event->get_machine()->get_object());
}

function workbench_stateflow_event_access($event_machine_name, $node) {

  ctools_include('export');
  ctools_include('context');
  $node_context = ctools_context_create('entity:node', $node);
  $event = ctools_export_crud_load('workbench_events', $event_machine_name);

  $contexts = ctools_context_match_required_contexts($event->requiredcontexts, array($node_context));
  $contexts = ctools_context_load_contexts($event, FALSE, $contexts);
  return ctools_access($event->access, $contexts);
}
